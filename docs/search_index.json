[["index.html", "Bookdown Análisis Series de Tiempo AAPL Capitulo1 Introducción y Descripción de los Datos de AAPL. 1.1 Introducción. 1.2 Objetivo general. 1.3 Objetivos específicos. 1.4 Justificación. 1.5 Fuente de datos.", " Bookdown Análisis Series de Tiempo AAPL Sofy Certuche, Milton Cartagena 2025-05-03 Capitulo1 Introducción y Descripción de los Datos de AAPL. 1.1 Introducción. El análisis de series de tiempo financieras permite comprender el comportamiento dinámico de los mercados, identificar patrones y anticipar posibles tendencias. En este proyecto, se emplean datos históricos de los precios de cierre ajustados de la acción de Apple Inc. (AAPL), extraídos desde la plataforma Yahoo Finance. Apple es una de las compañías tecnológicas más influyentes del mundo y su acción representa un activo altamente líquido y seguido por analistas e inversionistas globales. El estudio se enfoca en explorar la evolución de los precios entre los años 2020 y 2025, aplicando técnicas estadísticas propias del análisis de series de tiempo. 1.2 Objetivo general. Analizar el comportamiento histórico de la acción de Apple Inc. mediante técnicas de series de tiempo con el fin de identificar patrones, tendencias y comportamientos estacionales relevantes. 1.3 Objetivos específicos. Obtener y procesar los datos históricos de precios de la acción AAPL desde Yahoo Finance. Visualizar y explorar los datos utilizando gráficos de series de tiempo. Aplicar técnicas de suavizamiento como el promedio móvil simple (SMA). Incorporar rezagos (lags) para analizar la dependencia temporal. Evaluar la presencia de estacionalidad u otros patrones recurrentes. 1.4 Justificación. Apple Inc. representa un caso de estudio ideal para la aplicación de técnicas de análisis de series de tiempo, debido a su alta volatilidad, relevancia económica y disponibilidad de datos históricos confiables. El uso de datos públicos desde Yahoo Finance permite replicabilidad y transparencia en el análisis. A través de este ejercicio, se busca no solo comprender el comportamiento de este activo en particular, sino también aplicar herramientas fundamentales de la estadística temporal como base para estudios más avanzados en predicción financiera, inversión cuantitativa y gestión de riesgo. 1.5 Fuente de datos. Yahoo Finance: https://finance.yahoo.com/quote/AAPL Periodo de análisis: 2020-01-01 a 2025-04-30 Variable principal: Precio de cierre ajustado (Adjusted Close) "],["análisis-exploratorio-y-comportamiento-temporal-de-aapl..html", "Capitulo2 Análisis Exploratorio y Comportamiento Temporal de AAPL. 2.1 Descarga y visualización inicial. 2.2 Evolución del precio ajustado. 2.3 Análisis con promedios móviles. 2.4 Análisis de rezagos. 2.5 Descomposición estacional.", " Capitulo2 Análisis Exploratorio y Comportamiento Temporal de AAPL. 2.1 Descarga y visualización inicial. Los datos se obtienen utilizando el paquete tidyquant, que permite extraer cotizaciones bursátiles directamente desde Yahoo Finance. # Instalar y cargar paquetes if (!require(&quot;tidyquant&quot;)) install.packages(&quot;tidyquant&quot;) library(tidyquant) # Descargar datos históricos desde Yahoo Finance apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) # Vista previa head(apple_data) symbol date open high low close volume adjusted AAPL 2020-01-02 74.0600 75.1500 73.7975 75.0875 135480400 72.71606 AAPL 2020-01-03 74.2875 75.1450 74.1250 74.3575 146322800 72.00913 AAPL 2020-01-06 73.4475 74.9900 73.1875 74.9500 118387200 72.58292 AAPL 2020-01-07 74.9600 75.2250 74.3700 74.5975 108872000 72.24155 AAPL 2020-01-08 74.2900 76.1100 74.2900 75.7975 132079200 73.40364 AAPL 2020-01-09 76.8100 77.6075 76.5500 77.4075 170108400 74.96281 2.2 Evolución del precio ajustado. A continuación, se muestra el comportamiento del precio de cierre ajustado de AAPL, incluyendo etiquetas para resaltar puntos de referencia en la serie. # Librerias library(ggplot2) library(tidyquant) # Cargar datos si no están cargados apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) # Seleccionar solo algunos puntos clave para etiquetar (ej: cada 250 días) etiquetas &lt;- apple_data[seq(1, nrow(apple_data), by = 250), ] # Gráfico con línea y etiquetas del mismo color ggplot(apple_data, aes(x = date, y = adjusted)) + geom_line(color = &quot;blue&quot;, size = 0.3) + geom_text( data = etiquetas, aes(label = paste0(&quot;$&quot;, round(adjusted, 1))), color = &quot;gray20&quot;, size = 3, vjust = -1 ) + labs( title = &quot;Precio de cierre ajustado - Apple Inc.&quot;, x = &quot;Fecha&quot;, y = &quot;Precio (USD)&quot; ) + theme_minimal(base_size = 12) 2.3 Análisis con promedios móviles. Se calculan promedios móviles simples de 20 y 50 días para detectar tendencias a corto y mediano plazo. # Librerias library(TTR) library(ggplot2) library(tidyquant) library(dplyr) # Obtener y preparar datos apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) # Calcular SMA apple_data &lt;- apple_data %&gt;% mutate( SMA20 = SMA(adjusted, n = 20), SMA50 = SMA(adjusted, n = 50) ) # Seleccionar puntos cada 100 días para etiquetar etiquetas &lt;- apple_data[seq(1, nrow(apple_data), by = 100), ] # Graficar con etiquetas ggplot(apple_data, aes(x = date)) + geom_line(aes(y = adjusted), color = &quot;blue&quot;, size = 0.4) + geom_line(aes(y = SMA20), color = &quot;red&quot;, size = 0.5, linetype = &quot;dashed&quot;) + geom_line(aes(y = SMA50), color = &quot;#004949&quot;, size = 0.5, linetype = &quot;dotdash&quot;) + # Etiquetas para línea principal (precio ajustado) geom_text( data = etiquetas, aes(x = date, y = adjusted, label = paste0(&quot;$&quot;, round(adjusted, 1))), color = &quot;gray20&quot;, size = 3, vjust = -1 ) + labs( title = &quot;Precio ajustado con SMA de 20 y 50 días - Apple Inc.&quot;, x = &quot;Fecha&quot;, y = &quot;Precio (USD)&quot; ) + theme_minimal() 2.4 Análisis de rezagos. Este gráfico representa la relación entre el valor actual y el precio de 7 días anteriores. # Librerias library(dplyr) library(ggplot2) library(tidyquant) # Obtener datos y preparar apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) # Calcular rezagos de 1, 7 y 30 días apple_data &lt;- apple_data %&gt;% mutate( lag_1 = lag(adjusted, 1), lag_7 = lag(adjusted, 7), lag_30 = lag(adjusted, 30) ) # Filtrar datos válidos para graficar (sin NA en lag_7) datos_lag7 &lt;- apple_data %&gt;% filter(!is.na(lag_7)) # Seleccionar puntos para etiquetas (cada 100) etiquetas_lag7 &lt;- datos_lag7[seq(1, nrow(datos_lag7), by = 100), ] # Gráfico de rezago de 7 días con etiquetas ggplot(datos_lag7, aes(x = lag_7, y = adjusted)) + geom_point(alpha = 0.5, color = &quot;#9A68A4&quot;) + geom_text( data = etiquetas_lag7, aes(label = paste0(&quot;$&quot;, round(adjusted, 1))), color = &quot;gray20&quot;, size = 3, vjust = -1 ) + labs( title = &quot;Precio ajustado vs. Rezago de 7 días (Lag 7) - Apple Inc.&quot;, x = &quot;Precio hace 7 días&quot;, y = &quot;Precio actual&quot; ) + theme_minimal() 2.5 Descomposición estacional. Se descompone la serie mensual para observar los componentes de tendencia, estacionalidad y ruido. # Librerías library(tidyquant) library(dplyr) library(ggplot2) library(gridExtra) # Descargar y preparar datos apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) # Agregar mes y promedio mensual apple_mensual &lt;- apple_data %&gt;% mutate(month = format(date, &quot;%Y-%m&quot;)) %&gt;% group_by(month) %&gt;% summarise(promedio_mensual = mean(adjusted)) %&gt;% ungroup() # Convertir a serie de tiempo (mensual) ts_appl &lt;- ts(apple_mensual$promedio_mensual, start = c(2020, 1), frequency = 12) # Descomposición clásica descomposicion &lt;- decompose(ts_appl) # Extraer componentes original &lt;- descomposicion$x seasonal &lt;- descomposicion$seasonal trend &lt;- descomposicion$trend random &lt;- descomposicion$random # Crear fechas mensuales para etiquetar fechas &lt;- seq(as.Date(&quot;2020-01-01&quot;), by = &quot;month&quot;, length.out = length(original)) # DataFrames para graficar df &lt;- data.frame( Fecha = fechas, Original = as.numeric(original), Estacional = as.numeric(seasonal), Tendencia = as.numeric(trend), Residual = as.numeric(random) ) # Etiquetas de tendencia (cada 12 meses) etiquetas &lt;- df %&gt;% filter(!is.na(Tendencia)) %&gt;% slice(seq(1, n(), by = 12)) # Graficar los componentes library(gridExtra) p1 &lt;- ggplot(df, aes(x = Fecha, y = Original)) + geom_line() + labs(title = &quot;Serie original&quot;, y = &quot;&quot;, x = &quot;&quot;) + theme_minimal() p2 &lt;- ggplot(df, aes(x = Fecha, y = Estacional)) + geom_line(color = &quot;#0078A2&quot;) + labs(title = &quot;Componente estacional&quot;, y = &quot;&quot;, x = &quot;&quot;) + theme_minimal() p3 &lt;- ggplot(df, aes(x = Fecha, y = Tendencia)) + geom_line(color = &quot;#D8152F&quot;) + geom_text( data = etiquetas, aes(label = round(Tendencia, 1)), color = &quot;gray20&quot;, size = 3, vjust = -1 ) + labs(title = &quot;Tendencia estimada&quot;, y = &quot;&quot;, x = &quot;&quot;) + theme_minimal() p4 &lt;- ggplot(df, aes(x = Fecha, y = Residual)) + geom_col(color = &quot;gray20&quot;) + labs(title = &quot;Componente residual&quot;, y = &quot;&quot;, x = &quot;&quot;) + theme_minimal() # Mostrar juntos gridExtra::grid.arrange(p1, p2, p3, p4, ncol = 1) "],["preprocesamiento-y-modelado-temporal-de-la-serie-aapl..html", "Capitulo3 Preprocesamiento y Modelado Temporal de la Serie AAPL. 3.1 Introducción. 3.2 Objetivo. 3.3 Preparación de los Datos 3.4 Gráfico inicial. 3.5 Estacionariedad y diferenciación. 3.6 Descomposición de la serie 3.7 Modelo ARIMA y validación. 3.8 Validación de residuos. 3.9 Conclusión. 3.10 Predicción. 3.11 Punto de cambio. 3.12 Conclusión. 3.13 Bibliografía.", " Capitulo3 Preprocesamiento y Modelado Temporal de la Serie AAPL. 3.1 Introducción. El presente análisis explora la serie temporal del precio de cierre ajustado de las acciones de Apple Inc. (AAPL), obtenida de Yahoo Finance entre 2020 y abril de 2025. Se aplicarán técnicas de preprocesamiento, visualización, descomposición y modelado de series temporales con el fin de identificar patrones relevantes como tendencia, estacionalidad, rezagos y posibles puntos de cambio estructural. 3.2 Objetivo. Analizar la estructura temporal del precio de las acciones de Apple Inc. mediante técnicas de descomposición, prueba de estacionariedad, diferenciación e identificación de modelo ARIMA. El análisis incluirá visualizaciones con etiquetas para resaltar comportamientos clave. 3.3 Preparación de los Datos # Librerias library(tidyquant) apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) 3.4 Gráfico inicial. #Librerias library(ggplot2) plot1 &lt;- ggplot(apple_data, aes(x = date, y = adjusted)) + geom_line(color = &quot;#2C3E50&quot;) + geom_text(data = apple_data[seq(1, nrow(apple_data), by = 250), ], aes(label = paste0(&quot;$&quot;, round(adjusted, 1))), color = &quot;gray30&quot;, size = 3, vjust = -1) + labs(title = &quot;Precio de cierre ajustado - Apple Inc.&quot;, x = &quot;Fecha&quot;, y = &quot;Precio (USD)&quot;) + theme_minimal() plot1 3.5 Estacionariedad y diferenciación. # Librerias library(tseries) serie_ts &lt;- ts(apple_data$adjusted, frequency = 365, start = c(2020, 1)) adf.test(serie_ts) ## ## Augmented Dickey-Fuller Test ## ## data: serie_ts ## Dickey-Fuller = -3.0277, Lag order = 11, p-value = 0.1433 ## alternative hypothesis: stationary Interpretación Según el valor-p de la prueba ADF, si p &gt; 0.05, la serie no es estacionaria. Por tanto, se requiere una diferenciación: diff_serie &lt;- diff(serie_ts) adf.test(diff_serie) ## ## Augmented Dickey-Fuller Test ## ## data: diff_serie ## Dickey-Fuller = -11.094, Lag order = 11, p-value = 0.01 ## alternative hypothesis: stationary Resultado esperado: p &lt; 0.05, indicando que la serie diferenciada es estacionaria. 3.6 Descomposición de la serie ts_monthly &lt;- ts(tapply(apple_data$adjusted, format(apple_data$date, &quot;%Y-%m&quot;), mean), frequency = 12, start = c(2020,1)) descomp &lt;- decompose(ts_monthly) plot(descomp) Justificación: La descomposición permite observar la tendencia, estacionalidad y componente aleatorio, facilitando el entendimiento de la serie antes de modelar. 3.7 Modelo ARIMA y validación. library(forecast) modelo &lt;- auto.arima(diff_serie) summary(modelo) ## Series: diff_serie ## ARIMA(0,0,0) with zero mean ## ## sigma^2 = 8.816: log likelihood = -3352.17 ## AIC=6706.33 AICc=6706.34 BIC=6711.53 ## ## Training set error measures: ## ME RMSE MAE MPE MAPE MASE ACF1 ## Training set 0.1035856 2.969198 2.104537 100 100 0.6971253 -0.01002609 3.8 Validación de residuos. residuos &lt;- residuals(modelo) t.test(residuos) ## ## One Sample t-test ## ## data: residuos ## t = 1.2759, df = 1336, p-value = 0.2022 ## alternative hypothesis: true mean is not equal to 0 ## 95 percent confidence interval: ## -0.0556768 0.2628480 ## sample estimates: ## mean of x ## 0.1035856 Box.test(residuos, lag = 12, type = &quot;Ljung-Box&quot;) ## ## Box-Ljung test ## ## data: residuos ## X-squared = 17.725, df = 12, p-value = 0.1243 shapiro.test(residuos) ## ## Shapiro-Wilk normality test ## ## data: residuos ## W = 0.9394, p-value &lt; 2.2e-16 3.9 Conclusión. Si p &gt; 0.05 en t-test: la media de residuos es cero. Si p &gt; 0.05 en Box-test: residuos no están autocorrelacionados. Si p &gt; 0.05 en Shapiro-Wilk: residuos con distribución normal (deseable pero no obligatorio). 3.10 Predicción. forecast_values &lt;- forecast(modelo, h = 6) plot(forecast_values) 3.11 Punto de cambio. library(changepoint) cambio &lt;- cpt.mean(diff_serie) plot(cambio) Interpretación: Se identifica visualmente un punto de quiebre estructural relevante. 3.12 Conclusión. Se realizó un análisis exhaustivo de la serie temporal del precio de las acciones de Apple Inc. Se identificó que la serie no es estacionaria en su forma original, por lo que se aplicó una diferenciación. Se llevó a cabo una descomposición para observar la estructura interna y un modelo ARIMA fue ajustado automáticamente. Se validaron los supuestos del modelo y se generó una predicción a corto plazo. Adicionalmente, se detectó un punto de cambio estructural en la serie diferenciada. Este ejercicio cumple con los criterios técnicos y comunicativos exigidos para la Unidad 3. 3.13 Bibliografía. Yahoo Finance. (2025). Apple Inc. (AAPL) Stock Price &amp; Historical Data. Recuperado de https://finance.yahoo.com/quote/AAPL Dancho, M. &amp; Vaughan, D. (2021). tidyquant: Tidy Quantitative Financial Analysis. R package version 1.0.4. Recuperado de https://business-science.github.io/tidyquant/ Hyndman, R.J. &amp; Athanasopoulos, G. (2018). Forecasting: Principles and Practice (2da ed.). OTexts. Disponible en https://otexts.com/fpp2/ Cowpertwait, P. &amp; Metcalfe, A. (2009). Introductory Time Series with R. Springer. DOI: 10.1007/978-0-387-88698-5 Shumway, R. H., &amp; Stoffer, D. S. (2017). Time Series Analysis and Its Applications: With R Examples. Springer. R Core Team (2023). R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing. https://www.R-project.org/ "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
