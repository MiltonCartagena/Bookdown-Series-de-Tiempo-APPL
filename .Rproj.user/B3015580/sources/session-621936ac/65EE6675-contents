if (!require("tidyquant")) install.packages("tidyquant")
library(tidyquant)

apple_data <- tq_get("AAPL", from = "2020-01-01", to = Sys.Date())

head(apple_data)

# Gráfico con ggplot
library(ggplot2)
ggplot(apple_data, aes(x = date, y = adjusted)) +
  geom_line(color = "red") +
  labs(title = "Precio de cierre ajustado - Apple Inc.",
       x = "Fecha", y = "Precio ($)")


library(quantmod)
library(TTR)
library(ggplot2)

# Descargar datos de AAPL desde Yahoo Finance
getSymbols("AAPL", src = "yahoo", from = "2020-01-01", to = "2025-04-30")


# Extraer precios de cierre ajustado
aapl_close <- Cl(AAPL)

# Calcular SMA de 20 y 50 días
sma_20 <- SMA(aapl_close, n = 20)
sma_50 <- SMA(aapl_close, n = 50)

# Gráfico con líneas de SMA
plot(aapl_close, main = "Precio de Cierre AAPL con Promedios Móviles", col = "black", ylab = "Precio (USD)", xlab = "Fecha")
lines(sma_20, col = "blue", lwd = 2)
lines(sma_50, col = "red", lwd = 2)
legend("topright", legend = c("SMA 20 días", "SMA 50 días"), col = c("blue", "red"), lwd = 2)


## Análisis de rezagos (Autocorrelación)

acf(aapl_close, main = "Autocorrelación de la Serie AAPL (Precio de cierre ajustado)")


# Convertir a serie ts (aproximadamente 252 días hábiles al año)
aapl_ts <- ts(as.numeric(aapl_close), frequency = 252)

# Aplicar descomposición STL
aapl_stl <- stl(aapl_ts, s.window = "periodic")

# Gráfica de descomposición
plot(aapl_stl, main = "Descomposicion STL del Precio de AAPL")


gitcreds::gitcreds_set()

install.packages(gitcreds)

bookdown::render_book("index.Rmd", output_dir = "docs")

