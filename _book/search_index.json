[["index.html", "Bookdown Análisis Series de Tiempo AAPL Capitulo1 Introducción.", " Bookdown Análisis Series de Tiempo AAPL Sofy Certuche Milton Cartagena 2025-05-02 Capitulo1 Introducción. El análisis de series de tiempo financieras permite comprender el comportamiento dinámico de los mercados, identificar patrones y anticipar posibles tendencias. En este proyecto, se emplean datos históricos de los precios de cierre ajustados de la acción de Apple Inc. (AAPL), extraídos desde la plataforma Yahoo Finance. Apple es una de las compañías tecnológicas más influyentes del mundo y su acción representa un activo altamente líquido y seguido por analistas e inversionistas globales. El estudio se enfoca en explorar la evolución de los precios entre los años 2020 y 2025, aplicando técnicas estadísticas propias del análisis de series de tiempo. "],["objetivo-general..html", "Capitulo2 Objetivo general.", " Capitulo2 Objetivo general. Analizar el comportamiento histórico de la acción de Apple Inc. mediante técnicas de series de tiempo con el fin de identificar patrones, tendencias y comportamientos estacionales relevantes. "],["objetivos-específicos..html", "Capitulo3 Objetivos específicos.", " Capitulo3 Objetivos específicos. Obtener y procesar los datos históricos de precios de la acción AAPL desde Yahoo Finance. Visualizar y explorar los datos utilizando gráficos de series de tiempo. Aplicar técnicas de suavizamiento como el promedio móvil simple (SMA). Incorporar rezagos (lags) para analizar la dependencia temporal. Evaluar la presencia de estacionalidad u otros patrones recurrentes. "],["justificación..html", "Capitulo4 Justificación.", " Capitulo4 Justificación. Apple Inc. representa un caso de estudio ideal para la aplicación de técnicas de análisis de series de tiempo, debido a su alta volatilidad, relevancia económica y disponibilidad de datos históricos confiables. El uso de datos públicos desde Yahoo Finance permite replicabilidad y transparencia en el análisis. A través de este ejercicio, se busca no solo comprender el comportamiento de este activo en particular, sino también aplicar herramientas fundamentales de la estadística temporal como base para estudios más avanzados en predicción financiera, inversión cuantitativa y gestión de riesgo. "],["fuente-de-datos..html", "Capitulo5 Fuente de datos.", " Capitulo5 Fuente de datos. Yahoo Finance: https://finance.yahoo.com/quote/AAPL Periodo de análisis: 2020-01-01 a 2025-04-30 Variable principal: Precio de cierre ajustado (Adjusted Close) # Instalar y cargar paquetes if (!require(&quot;tidyquant&quot;)) install.packages(&quot;tidyquant&quot;) ## Cargando paquete requerido: tidyquant ## Registered S3 method overwritten by &#39;quantmod&#39;: ## method from ## as.zoo.data.frame zoo ## ── Attaching core tidyquant packages ─────────────────────────────────────────────────── tidyquant 1.0.11 ── ## ✔ PerformanceAnalytics 2.0.8 ✔ TTR 0.24.4 ## ✔ quantmod 0.4.27 ✔ xts 0.14.1 ## ── Conflicts ────────────────────────────────────────────────────────────────────── tidyquant_conflicts() ── ## ✖ zoo::as.Date() masks base::as.Date() ## ✖ zoo::as.Date.numeric() masks base::as.Date.numeric() ## ✖ PerformanceAnalytics::legend() masks graphics::legend() ## ✖ quantmod::summary() masks base::summary() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors library(tidyquant) # Descargar datos históricos desde Yahoo Finance apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) # Vista previa head(apple_data) ## # A tibble: 6 × 8 ## symbol date open high low close volume adjusted ## &lt;chr&gt; &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 AAPL 2020-01-02 74.1 75.2 73.8 75.1 135480400 72.7 ## 2 AAPL 2020-01-03 74.3 75.1 74.1 74.4 146322800 72.0 ## 3 AAPL 2020-01-06 73.4 75.0 73.2 74.9 118387200 72.6 ## 4 AAPL 2020-01-07 75.0 75.2 74.4 74.6 108872000 72.2 ## 5 AAPL 2020-01-08 74.3 76.1 74.3 75.8 132079200 73.4 ## 6 AAPL 2020-01-09 76.8 77.6 76.6 77.4 170108400 75.0 library(ggplot2) library(tidyquant) # Cargar datos si no están cargados apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) # Seleccionar solo algunos puntos clave para etiquetar (ej: cada 250 días) etiquetas &lt;- apple_data[seq(1, nrow(apple_data), by = 250), ] # Gráfico con línea y etiquetas del mismo color ggplot(apple_data, aes(x = date, y = adjusted)) + geom_line(color = &quot;blue&quot;, size = 0.3) + geom_text( data = etiquetas, aes(label = paste0(&quot;$&quot;, round(adjusted, 1))), color = &quot;gray20&quot;, size = 3, vjust = -1 ) + labs( title = &quot;Precio de cierre ajustado - Apple Inc.&quot;, x = &quot;Fecha&quot;, y = &quot;Precio (USD)&quot; ) + theme_minimal(base_size = 12) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. library(TTR) library(ggplot2) library(tidyquant) library(dplyr) ## ## ######################### Warning from &#39;xts&#39; package ########################## ## # # ## # The dplyr lag() function breaks how base R&#39;s lag() function is supposed to # ## # work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or # ## # source() into this session won&#39;t work correctly. # ## # # ## # Use stats::lag() to make sure you&#39;re not using dplyr::lag(), or you can add # ## # conflictRules(&#39;dplyr&#39;, exclude = &#39;lag&#39;) to your .Rprofile to stop # ## # dplyr from breaking base R&#39;s lag() function. # ## # # ## # Code in packages is not affected. It&#39;s protected by R&#39;s namespace mechanism # ## # Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning. # ## # # ## ############################################################################### ## ## Adjuntando el paquete: &#39;dplyr&#39; ## The following objects are masked from &#39;package:xts&#39;: ## ## first, last ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union # Obtener y preparar datos apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) # Calcular SMA apple_data &lt;- apple_data %&gt;% mutate( SMA20 = SMA(adjusted, n = 20), SMA50 = SMA(adjusted, n = 50) ) # Seleccionar puntos cada 100 días para etiquetar etiquetas &lt;- apple_data[seq(1, nrow(apple_data), by = 100), ] # Graficar con etiquetas ggplot(apple_data, aes(x = date)) + geom_line(aes(y = adjusted), color = &quot;blue&quot;, size = 0.4) + geom_line(aes(y = SMA20), color = &quot;red&quot;, size = 0.5, linetype = &quot;dashed&quot;) + geom_line(aes(y = SMA50), color = &quot;green&quot;, size = 0.5, linetype = &quot;dotdash&quot;) + # Etiquetas para línea principal (precio ajustado) geom_text( data = etiquetas, aes(x = date, y = adjusted, label = paste0(&quot;$&quot;, round(adjusted, 1))), color = &quot;gray20&quot;, size = 3, vjust = -1 ) + labs( title = &quot;Precio ajustado con SMA de 20 y 50 días - Apple Inc.&quot;, x = &quot;Fecha&quot;, y = &quot;Precio (USD)&quot; ) + theme_minimal() ## Warning: Removed 19 rows containing missing values or values outside the scale ## range (`geom_line()`). ## Warning: Removed 49 rows containing missing values or values outside the scale ## range (`geom_line()`). # Rezagos library(dplyr) library(ggplot2) library(tidyquant) # Obtener datos y preparar apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) # Calcular rezagos de 1, 7 y 30 días apple_data &lt;- apple_data %&gt;% mutate( lag_1 = lag(adjusted, 1), lag_7 = lag(adjusted, 7), lag_30 = lag(adjusted, 30) ) # Filtrar datos válidos para graficar (sin NA en lag_7) datos_lag7 &lt;- apple_data %&gt;% filter(!is.na(lag_7)) # Seleccionar puntos para etiquetas (cada 100) etiquetas_lag7 &lt;- datos_lag7[seq(1, nrow(datos_lag7), by = 100), ] # Gráfico de rezago de 7 días con etiquetas ggplot(datos_lag7, aes(x = lag_7, y = adjusted)) + geom_point(alpha = 0.5, color = &quot;darkblue&quot;) + geom_text( data = etiquetas_lag7, aes(label = paste0(&quot;$&quot;, round(adjusted, 1))), color = &quot;gray20&quot;, size = 3, vjust = -1 ) + labs( title = &quot;Precio ajustado vs. Rezago de 7 días (Lag 7) - Apple Inc.&quot;, x = &quot;Precio hace 7 días&quot;, y = &quot;Precio actual&quot; ) + theme_minimal() # descomposicion # Cargar librerías necesarias library(tidyquant) library(dplyr) library(ggplot2) library(gridExtra) ## ## Adjuntando el paquete: &#39;gridExtra&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## combine # Descargar y preparar datos apple_data &lt;- tq_get(&quot;AAPL&quot;, from = &quot;2020-01-01&quot;, to = &quot;2025-04-30&quot;) apple_data &lt;- na.omit(apple_data) # Agregar mes y promedio mensual apple_mensual &lt;- apple_data %&gt;% mutate(month = format(date, &quot;%Y-%m&quot;)) %&gt;% group_by(month) %&gt;% summarise(promedio_mensual = mean(adjusted)) %&gt;% ungroup() # Convertir a serie de tiempo (mensual) ts_appl &lt;- ts(apple_mensual$promedio_mensual, start = c(2020, 1), frequency = 12) # Descomposición clásica descomposicion &lt;- decompose(ts_appl) # Extraer componentes original &lt;- descomposicion$x seasonal &lt;- descomposicion$seasonal trend &lt;- descomposicion$trend random &lt;- descomposicion$random # Crear fechas mensuales para etiquetar fechas &lt;- seq(as.Date(&quot;2020-01-01&quot;), by = &quot;month&quot;, length.out = length(original)) # DataFrames para graficar df &lt;- data.frame( Fecha = fechas, Original = as.numeric(original), Estacional = as.numeric(seasonal), Tendencia = as.numeric(trend), Residual = as.numeric(random) ) # Etiquetas de tendencia (cada 12 meses) etiquetas &lt;- df %&gt;% filter(!is.na(Tendencia)) %&gt;% slice(seq(1, n(), by = 12)) # Graficar los componentes library(gridExtra) p1 &lt;- ggplot(df, aes(x = Fecha, y = Original)) + geom_line() + labs(title = &quot;Serie original&quot;, y = &quot;&quot;, x = &quot;&quot;) + theme_minimal() p2 &lt;- ggplot(df, aes(x = Fecha, y = Estacional)) + geom_line(color = &quot;blue&quot;) + labs(title = &quot;Componente estacional&quot;, y = &quot;&quot;, x = &quot;&quot;) + theme_minimal() p3 &lt;- ggplot(df, aes(x = Fecha, y = Tendencia)) + geom_line(color = &quot;red&quot;) + geom_text( data = etiquetas, aes(label = round(Tendencia, 1)), color = &quot;gray20&quot;, size = 3, vjust = -1 ) + labs(title = &quot;Tendencia estimada&quot;, y = &quot;&quot;, x = &quot;&quot;) + theme_minimal() p4 &lt;- ggplot(df, aes(x = Fecha, y = Residual)) + geom_col(color = &quot;gray20&quot;) + labs(title = &quot;Componente residual&quot;, y = &quot;&quot;, x = &quot;&quot;) + theme_minimal() # Mostrar juntos gridExtra::grid.arrange(p1, p2, p3, p4, ncol = 1) ## Warning: Removed 12 rows containing missing values or values outside the scale ## range (`geom_line()`). ## Warning: Removed 12 rows containing missing values or values outside the scale ## range (`geom_col()`). "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
